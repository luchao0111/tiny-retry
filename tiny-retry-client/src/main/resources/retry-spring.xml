<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans default-autowire="byName">

	<import resource="classpath:default-asyntask-config.xml" />

	<!-- 重试任务扫描器启动服务，考虑到任务扫描的成本，尽量让个别机器启动该服务，1～2台最佳 -->
	<bean id="retryServer" class="com.github.tinyretry.retry.RetryServer">
		<property name="scanners">
			<list>
				<!-- 扫描任务 -->
				<ref local="reTryDispatcher" />
				<!-- 扫描超时任务 -->
				<ref local="reTryTimeOutScanner" />
			</list>
		</property>
		<property name="mcJobSchedule" ref="retryMcJobSchedule" />
	</bean>

	<!-- 公共调度器,任务量大时可以自定义一个,把扫描器的和处理器asyncProcessor的调度器隔离 -->
	<bean id="retryMcJobSchedule" class="com.github.tinyretry.timer.McJobSchedule">
		<property name="scheduleName" value="retry_simple_schedule" />
		<property name="scheduleNameId" value="retry_simple_schedule" />
		<property name="repository" ref="simpleMcJobRepository" />
		<property name="maxThreads" value="4" />
		<property name="jobFactory" ref="removeAllJobFactory" />
		<property name="groups">
			<list>
				<ref bean="oneSecond" />
				<ref bean="thirdSecond" />
				<ref bean="oneMinute" />
				<ref bean="oneHour" />
				<ref bean="tenMin" />
				<ref bean="tenSecond" />
			</list>
		</property>
	</bean>

	<!-- 重试任务内部功能类 忽略 -->
	<bean id="removeAllJobFactory"
		class="com.github.tinyretry.timer.ext.jobfactory.RemoveAllJobFactory" />

	<!-- 简单仓库，在内存中保存任务类,支持自定义扩展 -->
	<bean id="simpleMcJobRepository"
		class="com.github.tinyretry.timer.ext.repository.SimpleMcJobRepository" />

	<bean id="reTryDispatcher" class="com.github.tinyretry.retry.scanner.ReTryDispatcher">
		<property name="definition">
			<bean class="com.github.tinyretry.timer.ext.McJobDefinition">
				<property name="groupId" value="thirdSecond" />
				<property name="name" value="reTryDispatcher" />
			</bean>
		</property>
		<property name="taskManage" ref="taskManage" />
		<property name="asyncProcessor" ref="asyncProcessor" />
		<property name="server" ref="retryServer" />
		<property name="repeatInterval" value="10000" />
	</bean>

	<!-- 超时扫描器 -->
	<bean id="reTryTimeOutScanner" class="com.github.tinyretry.retry.scanner.ReTryTimeOutScanner">
		<!-- 扫描器运行时间定义，允许定时或者周期执行，默认为10分钟运行一次 -->
		<property name="definition">
			<bean class="com.github.tinyretry.timer.ext.McJobDefinition">
				<!-- 执行时间为10分钟 -->
				<property name="groupId" value="tenMin" />
				<property name="name" value="reTryTimeOutScanner" />
			</bean>
		</property>
		<property name="taskManage" ref="taskManage" />
		<property name="asyncProcessor" ref="asyncProcessor" />
		<property name="server" ref="retryServer" />
		<!-- 超时任务查询周期,默认1小时，即每10分钟运行一次扫描器，扫描1个小时以前的处理中的任务，用作判断是否超时 超时条件: 任务的executeTimeOut 
			加上 上一次执行的时间点 小于当前时间 所以这个值需要根据任务执行情况自己定义 -->

		<property name="repeatInterval" value="3600000" />

		<!-- 调度器，必须与asyncProcessor的相同,才能注销超时任务 -->
		<property name="retryMcJobSchedule" ref="retryMcJobSchedule" />
	</bean>

	<!-- 重试任务提交者，该类负责把重试任务记录数据库，注册到调度器中,建议当前retryMcJobSchedule自定义，跟扫描器隔离 -->
	<bean id="asyncProcessor" class="com.github.tinyretry.retry.AsyncProcessor"
		init-method="init">
		<!-- 调度器，建议单独配置 -->
		<property name="retryMcJobSchedule" ref="retryMcJobSchedule" />
		<property name="taskManage" ref="taskManage" />
	</bean>


	<bean id="taskManage" class="com.github.tinyretry.retry.service.TaskManage">
		<property name="retryTaskService" ref="retryTaskService" />
	</bean>

	<!-- 重试任务的客户端，使用者一般场景只需要知道这个类就好 -->
	<bean id="retryPorcessClient" class="com.github.tinyretry.retry.client.RetryPorcessClient">
		<property name="asyncProcessor" ref="asyncProcessor" />
	</bean>


	<!-- !!!!!!需要配置一个 retryTaskService 该程序就能运行了 - !!!!!! -->

</beans>